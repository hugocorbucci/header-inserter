Create a ruby script, let's say add-header.rb:

require 'rubygems'
require 'header-inserter'
require 'header-inserter/project'

header_format = """
# Copyright (c) REPLACE_CREATE_AND_CURRENT_YEAR Hugo Corbucci
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# 'Software'), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# This file received the following contributions:
#   REPLACE_CREATOR - Initial API and implementation
#   REPLACE_CONTRIBUTORS - Improvements
#
# It was created on REPLACE_DATE, REPLACE_TIME.
# REPLACE_REST
"""

project = Project.new "/my/project"
files = project.list :rb
hooks = { "REPLACE_CREATE_AND_CURRENT_YEAR" => lambda { |file|
									created_year = file.created_on.year;
									year = Date.today.year
									if created_year = Date.today.year
									 	"#{year}"
									else
										"#{created_year}, #{year}" 
									end
								 },
		  "REPLACE_CREATOR" => lambda { |file| file.contributors()[0] },
		  "REPLACE_CONTRIBUTORS" => lambda { |file| contributors = file.contributors();contributors[1..contributors.size].join(", ") },
		  "REPLACE_DATE" => lambda {|file| file.created_on.strftime("%Y/%m/%d") },
		  "REPLACE_TIME" => lambda {|file| file.created_on.strftime("%H:%M") },
		  "REPLACE_REST" => lambda {|file| file.original_header }
	   }
files.each do |file|
	new_header = file.generate_header(header_format, hooks)
	old_header = file.original_header
	file.add_header new_header, old_header
end